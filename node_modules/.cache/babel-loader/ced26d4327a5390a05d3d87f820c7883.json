{"ast":null,"code":"import _classCallCheck from \"/Volumes/Data/Mywork/WEB/ReactJS/portfolio_walter/wlportfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/Mywork/WEB/ReactJS/portfolio_walter/wlportfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/Mywork/WEB/ReactJS/portfolio_walter/wlportfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/Mywork/WEB/ReactJS/portfolio_walter/wlportfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/Mywork/WEB/ReactJS/portfolio_walter/wlportfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Volumes/Data/Mywork/WEB/ReactJS/portfolio_walter/wlportfolio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Volumes/Data/Mywork/WEB/ReactJS/portfolio_walter/wlportfolio/src/components/main/ContactUs.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { ToastsStore } from 'react-toasts';\nimport { BASE_URL, SEND_EMAIL } from '../../apis';\n\nvar ContactUs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactUs, _Component);\n\n  function ContactUs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactUs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactUs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      nameValid: true,\n      emailValid: true,\n      msgValid: true\n    };\n\n    _this.handleChangeName = function (e) {\n      _this.setState({\n        name: e.target.value,\n        nameValid: true\n      });\n    };\n\n    _this.handleChangeEmail = function (e) {\n      _this.setState({\n        email: e.target.value,\n        emailValid: true\n      });\n    };\n\n    _this.handleChangeMessage = function (e) {\n      _this.setState({\n        message: e.target.value,\n        msgValid: true\n      });\n    };\n\n    _this.onSendEmail = function () {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          message = _this$state.message;\n      var resumeData = _this.props.resumeData;\n      var nameValid = false,\n          emailValid = false,\n          msgValid = false;\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      var emailValid_ = re.test(email);\n      nameValid = name !== \"\";\n      msgValid = message !== \"\";\n      emailValid = email !== \"\" && emailValid_;\n\n      _this.setState({\n        nameValid: nameValid,\n        msgValid: msgValid,\n        emailValid: emailValid\n      });\n\n      if (!nameValid || !msgValid || !emailValid) return;\n      var subject = \"Interview Request on \".concat(resumeData.name, \" Portfolio\");\n      var body = {\n        name: name,\n        email: email,\n        message: message,\n        subject: subject\n      };\n\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      axios.post(\"\".concat(BASE_URL).concat(SEND_EMAIL), body).then(function (response) {\n        ToastsStore.success('Thanks for contacting me. We will be right back to you!');\n        self.setState({\n          name: \"\",\n          email: \"\",\n          message: \"\"\n        });\n      }).catch(function (response) {\n        ToastsStore.error('Contacting was failed, please try again later!');\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactUs, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          message = _this$state2.message,\n          nameValid = _this$state2.nameValid,\n          emailValid = _this$state2.emailValid,\n          msgValid = _this$state2.msgValid;\n      return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n        id: \"contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          textAlign: \"center\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Get In Touch\"), React.createElement(\"div\", {\n        className: \"contact-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Your Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Your name\",\n        value: name,\n        onChange: this.handleChangeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), !nameValid ? React.createElement(\"p\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Name should be not empty ***\") : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"Email Address\",\n        value: email,\n        onChange: this.handleChangeEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), !emailValid ? React.createElement(\"p\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Email should be not empty or valid one ***\") : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Message\"), React.createElement(\"textarea\", {\n        id: \"message\",\n        name: \"message\",\n        placeholder: \"Write something..\",\n        style: {\n          height: \"200px\"\n        },\n        value: message,\n        onChange: this.handleChangeMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), !msgValid ? React.createElement(\"p\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Message should be not empty *** \") : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onSendEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Send Email\")))), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"map-contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        src: \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2996.256700778472!2d19.799153615079632!3d41.32503107927003!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x135031ab88198e6b%3A0x622ceb5a29b36d39!2zUnJ1Z2EgZSBLYXZhasOrcywgVGlyYW7DqywgU2hxaXDDq3JpYQ!5e0!3m2!1ssq!2s!4v1532722376734\",\n        style: {\n          width: \"100%\",\n          height: \"250px\",\n          frameborder: \"0\"\n        },\n        allowFullScreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), \" \");\n    }\n  }]);\n\n  return ContactUs;\n}(Component);\n\nexport { ContactUs as default };","map":{"version":3,"sources":["/Volumes/Data/Mywork/WEB/ReactJS/portfolio_walter/wlportfolio/src/components/main/ContactUs.js"],"names":["React","Component","axios","ToastsStore","BASE_URL","SEND_EMAIL","ContactUs","state","name","email","message","nameValid","emailValid","msgValid","handleChangeName","e","setState","target","value","handleChangeEmail","handleChangeMessage","onSendEmail","resumeData","props","re","emailValid_","test","subject","body","self","post","then","response","success","catch","error","textAlign","color","height","width","frameborder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {ToastsStore} from 'react-toasts';\nimport {BASE_URL, SEND_EMAIL} from '../../apis';\n\nexport default class ContactUs extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    nameValid: true,\n    emailValid: true,\n    msgValid: true\n  };\n\n  handleChangeName = (e) => {\n    this.setState({name: e.target.value, nameValid: true});\n  };\n  handleChangeEmail = (e) => {\n    this.setState({email: e.target.value, emailValid: true});\n  };\n  handleChangeMessage = (e) => {\n    this.setState({message: e.target.value, msgValid: true});\n  };\n  onSendEmail = () => {\n    const {name, email, message} = this.state;\n    const {resumeData} = this.props;\n\n    let nameValid = false,\n        emailValid = false,\n        msgValid = false;\n        \n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailValid_ = re.test(email);\n\n    nameValid = (name !== \"\");\n    msgValid = (message !== \"\");\n    emailValid = (email !== \"\" && emailValid_);\n\n    this.setState({nameValid, msgValid, emailValid});\n    if (!nameValid || !msgValid || !emailValid) return;\n\n    const subject = `Interview Request on ${resumeData.name} Portfolio`;\n    const body = { name, email, message, subject };\n    const self = this;\n\n    axios.post(`${BASE_URL}${SEND_EMAIL}`, body)\n      .then( response => { \n        ToastsStore.success('Thanks for contacting me. We will be right back to you!');\n        self.setState({name: \"\", email: \"\", message: \"\"});\n      } )\n      .catch( response => {\n        ToastsStore.error('Contacting was failed, please try again later!');\n      } );\n  }\n\n  render() {\n    const {name, email, message, nameValid, emailValid, msgValid} = this.state;\n    \n    return ( <>\n      <section id=\"contact\">\n        <h2 style={{textAlign:\"center\", color: \"white\"}}>Get In Touch</h2>\n        <div className=\"contact-container\">\n          <div>\n            <label htmlFor=\"name\">Your Name</label>\n            <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Your name\" value={name} onChange={this.handleChangeName} />\n            {!nameValid ? <p className=\"error\">Name should be not empty ***</p> : <br/>}\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email Address\" value={email} onChange={this.handleChangeEmail} />\n            {!emailValid ? <p className=\"error\">Email should be not empty or valid one ***</p> : <br/>}\n          </div>\n          <div>\n            <label htmlFor=\"message\">Message</label>\n            <textarea id=\"message\" name=\"message\" placeholder=\"Write something..\" style={{height:\"200px\"}} value={message} onChange={this.handleChangeMessage} ></textarea>\n            {!msgValid ? <p className=\"error\">Message should be not empty *** </p> : <br/>}\n          </div>\n          <div>\n            <button onClick={this.onSendEmail}>Send Email</button>\n          </div>\n        </div>\n      </section>\n      <section>\n        <div className=\"map-contact\">\n          <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2996.256700778472!2d19.799153615079632!3d41.32503107927003!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x135031ab88198e6b%3A0x622ceb5a29b36d39!2zUnJ1Z2EgZSBLYXZhasOrcywgVGlyYW7DqywgU2hxaXDDq3JpYQ!5e0!3m2!1ssq!2s!4v1532722376734\" style={{width: \"100%\", height:\"250px\", frameborder: \"0\"}} allowFullScreen></iframe>\n        </div>\n      </section> </>\n      );\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}